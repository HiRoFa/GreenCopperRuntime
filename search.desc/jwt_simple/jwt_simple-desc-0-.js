searchState.loadedDescShard("jwt_simple", 0, "GitHub CI Docs.rs crates.io\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nGet the backtrace for this Error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nThe lowest level cause of this error — this error’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDepending on applications, the <code>audiences</code> property may be …\nA set of JWT claims.\nType representing the fact that no application-defined …\nAudience\nReturn <code>true</code> if the audiences include any of the …\nCreate a new set of claims, without custom data, expiring …\nCreate a nonce, attach it and return it\nCustom (application-defined) claims\nTime the claims expire at\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the audiences as a set\nGet the audiences as a string. If it was originally …\nSet the token as not being valid until <code>unix_timestamp</code>\nTime the claims will be invalid until\nReturn <code>true</code> if the audiences are represented as a set.\nReturn <code>true</code> if the audiences are represented as a string.\nTime the claims were created at\nIssuer - This can be set to anything application-specific\nJWT identifier\nNonce\nSubject - This can be set to anything application-specific\nSet a unique audience (an optional recipient identifier), …\nRegister one or more audiences (optional recipient …\nCreate a new set of claims, with custom data, expiring in …\nSet the issuer\nSet the JWT identifier\nSet the nonce\nSet the subject\nUnsigned metadata about a key to be attached to tokens. …\nAdditional features to enable during verification. …\nAccept tokens created with a date in the future\nRequire the audience to be present in the set\nRequire the issuer to be present in the set\nChange the current time. Only used for testing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum unsafe, untrusted, unverified JWT header length to …\nMaximum token length to accept\nReject tokens created more than <code>max_validity</code> ago\nReject tokens created before the given date\nRequire a specific key identifier to be present\nRequire a specific nonce to be present\nRequire a specific public key to be present\nRequire a specific subject to be present\nHow much clock drift to tolerate when verifying token …\nAdd a certificate SHA-1 thumbprint to the metadata (“x5t…\nAdd a certificate SHA-256 thumbprint to the metadata (“…\nAdd a certificate URL to the metadata (“x5u”)\nAdd a key set URL to the metadata (“jku”)\nAdd a public key to the metadata (“jwk”)\nSystem time\nA <strong>data structure</strong> that can be deserialized from any data …\nA duration type to represent an approximate span of time\nA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.\nA <strong>data structure</strong> that can be serialized into any data …\nAlias for <code>Duration</code>.\nReturns the absolute difference between two <code>Duration</code>s\nReturns the number of days represented by this duration\nReturns the duration as a floating point number, …\nReturns the number of minutes represented by this duration\nReturns the number of whole microseconds represented by …\nReturns the number of whole milliseconds represented by …\nReturns the number of minutes represented by this duration\nReturns the number of whole nanoseconds represented by …\nReturns the number of whole seconds represented by this …\nReturn this duration as a number of “ticks”.\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nReturns the number of elements the set can hold without …\nClears the set, removing all values.\nOverwrites the contents of <code>self</code> with a clone of the …\nReturns <code>true</code> if the set contains a value.\nCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …\nDeserialize this value from the given Serde deserializer.\nVisits the values representing the difference, i.e., the …\nClears the set, returning all elements as an iterator. …\nCreates an iterator which uses a closure to determine if a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nCreates a new Duration from the specified number of days\nCreates a new Duration from the specified number of hours\nCreates a new Duration from the specified number of …\nCreates a new Duration from the specified number of minutes\nCreates a new Duration from the specified number of seconds\nCreates a new Duration from the specified number of “…\nReturns a reference to the value in the set, if any, that …\nInserts the given <code>value</code> into the set if it is not present, …\nInserts a value computed from <code>f</code> into the set if the given …\nReturns a reference to the set’s <code>BuildHasher</code>.\nAdds a value to the set.\nVisits the values representing the intersection, i.e., the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a superset of another, i.e., …\nAn iterator visiting all elements in arbitrary order. The …\nReturns the number of elements in the set.\nCreates a new <code>Duration</code> from the specified number of …\nCreates an empty <code>HashSet</code>.\nReturns the elapsed time since the UNIX epoch\nReturns the elapsed time since the UNIX epoch, based on …\nRemoves a value from the set. Returns whether the value was\nAdds a value to the set, replacing the existing value, if …\nReserves capacity for at least <code>additional</code> more elements to …\nRetains only the elements specified by the predicate.\nSerialize this value into the given Serde serializer.\nSets the cached system time to the specified timestamp. …\nShrinks the capacity of the set with a lower limit. It …\nShrinks the capacity of the set as much as possible. It …\nReturns the difference of <code>self</code> and <code>rhs</code> as a new …\nReturns the nanosecond precision represented by this …\nVisits the values representing the symmetric difference, …\nRemoves and returns the value in the set, if any, that is …\nTries to reserve capacity for at least <code>additional</code> more …\nVisits the values representing the union, i.e., all the …\nUpdates the cached system time.\nCreates an empty <code>HashSet</code> with at least the specified …\nCreates an empty <code>HashSet</code> with at least the specified …\nCreates a new empty hash set which will use the given …\nUtilities to get information about a JWT token\nJWT token information useful before signature/tag …\nThe JWT algorithm for this token (“alg”) This …\nThe certificate chain for this token (“x5c”) This …\nURLsafe-base64-encoded SHA1 hash of the X.509 certificate …\nURLsafe-base64-encoded SHA256 hash of the X.509 …\nThe certificate URL for this token (“x5u”) This …\nThe content type for this token (“cty”)\nThe set of raw critical properties for this token (“crit…\nDecode token information that can be usedful prior to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key, or public key identifier for this token (“kid”…\nThe key set URL for this token (“jku”) This …\nThe public key for this token (“jwk”) This information …\nThe signature type for this token (“typ”)")