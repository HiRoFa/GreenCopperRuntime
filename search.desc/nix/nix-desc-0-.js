searchState.loadedDescShard("nix", 0, "Rust friendly bindings to the various *nix system …\nContains the error value\nNix’s main error type.\nCommon trait used to represent file system paths by many …\nContains the success value\nNix Result Type\nGenerates a wrapper function for an ioctl that passes no …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads data …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads an …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for an ioctl that writes an …\nGenerates a wrapper function for a ioctl that writes an …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that writes data …\nGenerates a wrapper function for a “bad” ioctl that …\nIs the path empty?\nLength of the path in bytes\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nMostly platform-specific functionality\nSafe wrappers around functions found in libc “unistd.h”…\nExecute a function with this path as a <code>CStr</code>.\nThe sentinel value indicates that a function failed and …\nReturns the platform-specific value of errno\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>Ok(value)</code> if it does not contain the sentinel …\nProvide helpers for making ioctl system calls.\nOperating system signals.\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nSystem info structure returned by <code>sysinfo</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the load average tuple.\nCurrent number of processes.\nReturns the total amount of installed RAM in Bytes.\nReturns the amount of completely unused RAM in Bytes.\nReturns the amount of unused swap memory in Bytes.\nReturns the amount of swap memory in Bytes.\nReturns system information.\nReturns the time since system boot.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a new <code>TimeSpec</code> with given number of microseconds.\nMakes a new <code>TimeVal</code> with given number of microseconds.\nMakes a new <code>TimeSpec</code> with given number of nanoseconds.\nMakes a new <code>TimeVal</code> with given number of nanoseconds.  …\nConstruct a new <code>TimeSpec</code> from its components\nConstruct a new <code>TimeVal</code> from its components\nClose a raw file descriptor\nCreate an interprocess channel.\nRead from a raw file descriptor.\nSuspend execution for an interval of time\nWrite to a raw file descriptor.")