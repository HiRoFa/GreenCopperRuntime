searchState.loadedDescShard("mysql_common", 0, "This crate is an implementation of basic MySql protocol …\nBinlog-related structures and functions. This …\nThis macro is a convenient way to pass named parameters to …\nBinlog file.\nA binlog file starts with a Binlog File Header <code>[ fe &#39;bin&#39; ]</code>…\nBinlog event.\nAn event type, associated with this struct (if any).\nReader for binlog events.\nLength of a binlog file header.\nValue of a binlog file header.\nFunctions and types related to the mysql decimal type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the format description event.\nReturns the table map event for the given table id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMySql internal binary JSON representation.\nReturns serialized length of this struct in bytes.\nCreates a new instance.\nCreates a new instance.\nWill read next event from the given stream (Returns None …\nThis function reads decompressed payload of a …\nReturns a reference to the binlog stream reader.\nReturns a mutable reference to the binlog stream reader.\nContains values in the following order:\nCRC32 of zlib algorithm\nEvents are without checksum though its generator is …\nEnumeration spcifying checksum algorithm used to encode a …\nDepending on the MySQL Version that created the binlog the …\nCharacter set of string columns.\nCollumn name of columns (included if …\nA flag that indicates column visibility attribute.\nIndicates that rows in this event are complete, that is …\nContains values in the following order:\nContains values in the following order:\nContains values in the following order:\nContains 2 bytes value of the collation_database system …\nCharacter set of string columns.\nContains 8 bytes unsigned little-endian integer carrying …\nContains 2 bytes unsigned little-endian integer carrying …\nContains 1 byte value.\nCharacter set of enum and set columns.\nCharacter set of enum and set columns.\nTotal number of known events.\nName of each variant in an ENUM columns.\nBinlog Event Flags\nBinlog Event Type\nContains 1 byte boolean.\nA format description event is the first event of a binlog …\nContains <code>Flags2</code> flags.\nReal type of geometry columns.\nGroup number of a Gtid event.\nGtid event flags.\nThere are possibly lost events in the replication stream.\nNo incident.\nIndicates the value to use for an <code>AUTO_INCREMENT</code> column in …\nType of an incident event.\nType of an <code>InvarEvent</code>.\nContains values in the following order:\nIndicates the value to use for the <code>LAST_INSERT_ID()</code> …\nEvent is created by the slaves SQL-thread and shouldn’t …\nGets unset in the <code>FORMAT_DESCRIPTION_EVENT</code> when the file …\nUnused.\nSetting this flag will mark an event as Ignorable.\nMTS: group of events can be marked to force its execution …\nEvents with this flag are not filtered (e.g. on the current\nEvent is created by the slaves IO-thread when written to …\nEvent doesn’t need default database to be updated (…\nevent is thread specific (<code>CREATE TEMPORARY TABLE</code> …).\nUnused.\nContains 2 bytes code identifying a table of month and day …\nVariants of this enum describe how LOAD DATA handles …\nTransaction may have changes logged with SBR.\nContains 4 bytes bitfield.\nContains 3 bytes unsigned little-endian integer.\nNo foreign key checks.\nEnumerates types of optional metadata fields.\nExtension of UPDATE_ROWS_EVENT, allowing partial values …\nPrimary key with prefix (included if …\nA <code>QUERY_EVENT</code> is created for each query that modifies the …\nNo unique key checks.\nThe rotate event is added to the binlog as last event to …\nRows event flags.\nName of each variant in a SET columns.\nUNSIGNED flag of numeric columns.\nPrimary key without prefix (included if …\nIgnored event.\nA start event is the first event of a binlog for …\nLast event of a statement.\nA <code>STOP_EVENT</code> has no payload or post-header.\nSemi-sync binlog flags.\nContains <code>SqlMode</code> flags.\nContains 1 byte value.\nBinlog query event status vars keys.\nContains 8 bytes value of the table map that is to be …\nContains values in the following order:\nThe supported compression algorithms for …\nThe on-the-wire fields for Transaction_payload\nIgnored event.\nContains values in the following order:\nFlags of a user variable.\nMySQL 3.23 - &lt; 4.0.0\nMySQL 4.0.0 - 4.0.1\nMySQL 4.0.2 - &lt; 5.0.0\nMySQL 5.0.0+\nPrepared XA transaction terminal event similar to Xid.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBase of the <code>Digit</code>.\nNumber of decimal digits per <code>Digit</code>.\nNumber of bytes required to store given number of decimal …\nMySql decimal.\nType of a base 9 digit.\nReturns binary representation size (in bytes) for given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLength of an append block event post-header.\nAnonymous GTID event.\nNot yet implemented.\nIgnored by this implementation\nLength of a begin load query event post-header.\nLength of the checksum algorithm description.\nLength of the checksum.\nBegin load query event.\nBinlog event footer.\nThe binlog event header starts each event and is 19 bytes …\nMinimum MySql version that supports checksums.\nIgnored by this implementation.\nWill be empty if timezone length is <code>0</code>.\nSee <code>OptionalMetadataFieldType::COLUMN_CHARSET</code>.\nContains charset+collation for column.\nName of a column in <code>ColumnNames</code>.\nSee <code>OptionalMetadataFieldType::COLUMN_NAME</code>.\nContains names of columns.\nSee <code>OptionalMetadataFieldType::COLUMN_VISIBILITY</code>.\nIgnored.\nIgnored.\nLength of a delete file event post-header.\nOptional metadata field that contains charsets for columns.\nSee <code>OptionalMetadataFieldType::DEFAULT_CHARSET</code>.\nIgnored by this implementation\nDelete rows event.\nDelete rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nLength of an execute load query event extra header.\nLength of an execute load query event post-header.\nSee <code>OptionalMetadataFieldType::ENUM_AND_SET_COLUMN_CHARSET</code>.\nSee <code>OptionalMetadataFieldType::ENUM_AND_SET_DEFAULT_CHARSET</code>…\nString value for an ENUM column variant.\nSee <code>OptionalMetadataFieldType::ENUM_STR_VALUE</code>.\nContains string values for ENUM column.\nContains string values of ENUM columns.\nRaw binlog event.\nParsed event data.\nIgnored by this implementation\nExecute load query event.\n<code>0</code> is interpreted as <code>false</code> and everything else as <code>true</code>.\nLength of a fde event post-header.\nA format description event is the first event of a binlog …\nLength of a gtid events post-header.\nSee <code>OptionalMetadataFieldType::GEOMETRY_TYPE</code>.\nContains real types for every geometry column.\nGTID stands for Global Transaction IDentifier.\nLength of a heartbeat event post-header.\nLength of an ignorable event post-header.\nLength of an incident event post-header.\nLength of an intvar event post-header.\nUsed to log an out of the ordinary event that occurred on …\nInteger based session-variables event.\nBinlog event header length for version &gt;= 4.\nIgnored by this implementation\nIgnored by this implementation\nContains <code>column_id -&gt; charset+collation</code> mapping for …\nHelper struct that extracts optional metadata for columns.\nIterator over fields of an optional metadata.\nPartial update rows event.\nIgnored by this implementation\nIgnored by this implementation\nIgnored by this implementation\nNot yet implemented.\nInfo about primary key with a prefix (see …\nSee <code>OptionalMetadataFieldType::PRIMARY_KEY_WITH_PREFIX</code>.\nContains a sequence of primary keys with prefix.\nLength of a query event post-header, where 5.0 differs: 2 …\nLength of a query event post-header, where 3.23, 4.x and …\nA query event is created for each query that modifies the …\nLength of a rand event post-header.\nLength of a rotate event post-header.\nLength of a v1 rows query event post-header.\nLength of a rows events post-header.\nRand event.\nThe rotate event is added to the binlog as last event to …\nCommon base structure for all row-containing binary log …\nRows events are unified under this enum (see <code>EventData</code>).\nIterator over rows of a <code>RowsEvent</code>.\nQuery that caused the following <code>ROWS_EVENT</code>.\nLength of a server version string.\nOffset of a server version string.\nLength of a start event post-header.\nLength of a stop event post-header.\nString value for a SET column variant.\nSee <code>OptionalMetadataFieldType::SET_STR_VALUE</code>.\nContains string values for SET column.\nContains string values of SET columns.\nSee <code>OptionalMetadataFieldType::SIGNEDNESS</code>.\nContains a sequence of PK column indexes where PK doesn’…\nSee <code>OptionalMetadataFieldType::SIMPLE_PRIMARY_KEY</code>.\nIgnored by this implementation\nRaw status variable.\nStatus variable value.\nStatus variables of a QueryEvent.\nIterator over status vars of a <code>QueryEvent</code>.\nLength of a table map event post-header.\nLength of an incident event post-header.\nLength of a transaction payload event post-header.\nTable map event.\nWill be empty if timezone length is <code>0</code>.\nNot yet implemented.\nEvent that encloses all the events of a transaction.\nThis structure implements <code>io::BufRead</code> and represents the …\nLength of a user var event post-header.\nUpdate rows event.\nUpdate rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nUser variable event.\nLength of a view change event post-header.\nNot yet implemented.\nWrite rows event.\nWrite rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nLength of a xa prepare event post-header.\nLength of a xid event post-header.\nNot yet implemented.\nXid event.\nReturns the algorithm.\nReturns the <code>binlog_version</code> field value.\nReturns the <code>block_data</code> value.\nCalculates checksum for this event.\nReturns the charset+collation.\nReturns the charset of the variable value (<code>0</code> if …\nReturns the checksum, if it is defined.\nReturns the column index.\nReturns the column index\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns the number of columns\nReturns the <code>create_timestamp</code> field value.\nDecompress the whole payload.\nReturns a reference to the event data.\nReturns database name as a string (lossy converted).\nReturns raw database name value.\nReturns decompressed payload in form of a struct that …\nReturns the default charset.\nReturns the <code>dup_handling</code> value.\nReturns the <code>end_pos</code> value.\nReturns the <code>error_code</code> value.\nReturns the <code>error_code</code> value.\nReturns the <code>event_header_length</code> field value.\nReturns the size of the event (header, post-header, body).\nReturns an actual event type of this rows event.\nReturns the event type, if it’s valid.\nReturns the <code>event_type_header_lengths</code> field value.\nReturns the raw event type.\nReturns the <code>execution_time</code> value.\nReturns the <code>execution_time</code> value.\nReturns a reference to the corresponding format …\nReturns the <code>file_id</code> value.\nReturns the <code>file_id</code> value.\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns the <code>flags</code> value. Unknown bits will be truncated.\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns the flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the raw <code>flags</code> value.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the raw flags.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the <code>footer</code> field value.\nReturns a reference to the event footer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns parsed checksum algorithm, or raw value if …\nReturns <code>true</code> if checksum is enabled.\nReturns metadata for the given column.\nReturns a type of the given column.\nReturns header length for the given event type, if defined.\nReturns raw type of the column as stored in the …\nReturns raw value of a status variable by key.\nReturns parsed value of this status variable, or raw value …\nReturns the <code>gno</code> value.\nReturns <code>false</code> if the reader is exhausted.\nReturns a reference to the event header.\nReturns the <code>immediate_commit_timestamp</code> value.\nReturns the <code>immediate_server_version</code> value.\nReturns the <code>incident_type</code> value, if it’s valid.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nConverts self to a ’static version.\nReturns true if it’s a fake <code>RotateEvent</code> (its log postion …\nThis is <code>true</code> if the value is null.\nReturns an iterator over QueryEvent status variables.\nFor every character column (in order) emits its character …\nReturns an iterator over charsets.\nFor every column (in order) emits its name\nFor every ENUM and SET column (in order) emits its …\nReturns an iterator over real types.\nReturns an iterator over column indexes.\nReturns an iterator over column indexes and corresponding …\nReturns an iterator over names of columns.\nIterates non-default charsets. Errors if data is malformed.\nIterates over column indexes for columns that are primary …\nFor every numeric column (in order) emits signedness data (…\nReturns an iterator over SET columns string values.\nReturns an iterator over ENUM columns string values.\nRuturns a number of JSON columns.\nReturns the <code>last_committed</code> value.\nReturns the <code>lc_typecode</code> value.\nReturns length of this load event in bytes.\nReturns length of this event in bytes.\nReturns the position of the next event.\nReturns <code>message</code> value as a string (lossy converted).\nReturns the raw <code>message</code> value.\nReturns name of the binlog to rotate to as a string (lossy …\nReturns the name as a string (lossy converted).\nReturns the name of the variable as a string (lossy …\nReturns raw name of the binlog to rotate to.\nReturns the raw name.\nReturns the raw name of the variable.\nCreates a new instance.\nCreates new instance.\nCreates a new instance.\nCreates a new instance.\nCreates new instance.\nCreates a new <code>RowsQueryEvent</code>.\nCreates new column name.\nCreates a new SET variant name.\nCreates a new ENUM variant name.\nCreates a new PK with prefix.\nCreates a new <code>BinlogEventHeader</code>.\nCreates new instance (<code>data</code> is not compressed).\nCreates new instance (<code>data</code> is ZSTD-compressed).\nReturns null-bitmap for this table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of variants in this SET column.\nReturns the number of variants in this ENUM column.\nReturns the <code>original_commit_timestamp</code> value.\nReturns the <code>original_server_version</code> value.\nReturns raw payload of the binlog event.\nReturns the payload_size.\nReturns the position within the binary log to rotate to.\nReturns the prefix length. <code>0</code> means that the whole column …\nReturns the <code>query</code> value as a string (lossy converted).\nReturns the <code>query</code> value as a string (lossy converted).\nReturns query as a string (lossy converted).\nReturns the <code>query</code> value.\nReturns the <code>query</code> value.\nReturns the raw query.\nReads an event from <code>input</code>.\nReads binlog event footer from the given buffer.\nReads event data. Returns <code>None</code> if event type is unknown.\nRead event-type specific data as a binlog struct.\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns the <code>schema</code> value as a string (lossy converted).\nReturns the <code>schema</code> value as a string (lossy converted).\nReturns the <code>schema</code> value.\nReturns the <code>schema</code> value.\nReturns the <code>sequence_number</code> value.\nReturns the server Id of the originating mysql-server.\nReturns the <code>server_version</code> field value as string (lossy …\nReturns the <code>server_version</code> field value.\nSet checksum enabled flag.\nReturns the <code>sid</code> value.\nReturns a parsed MySql version.\nReturns the <code>start_pos</code> value.\nReturns an iterator over status variables.\nReturns an iterator over status variables.\nReturns the <code>status_vars</code> value.\nReturns the <code>status_vars</code> value.\nReturns the <code>subtype</code> value.\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the table identifier.\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns table name as a string (lossy converted).\nReturns raw table name value.\nReturns the <code>thread_id</code> value.\nReturns the <code>thread_id</code> value.\nReturns the <code>timestamp</code> value.\nReturns the <code>tx_length</code> value.\nReturns the uncompressed_size.\nReturns the <code>value</code> value.\nReturns the value as a string (lossy converted).\nReturns the value as a string (lossy converted).\nReturns the value of the variable (empty if <code>Self::is_null</code> …\nReturns the raw value.\nReturns the raw value.\nReturns the type of the variable value.\nReturns an iterator over string values of SET variants.\nReturns an iterator over string values of ENUM variants.\nSets the <code>algorithm</code> field value.\nDefines the <code>server_version</code> field.\nSets the <code>block_data</code> value.\nDefines the <code>server_version</code> field.\nSets the <code>dup_handling</code> value.\nSets the <code>end_pos</code> value.\nSets the <code>error_code</code> value.\nSets the <code>error_code</code> value.\nDefines the <code>server_version</code> field.\nSets the <code>execution_time</code> value.\nSets the <code>execution_time</code> value.\nSets the <code>file_id</code> value.\nSets the <code>file_id</code> value.\nDefines the <code>flags</code> value.\nDefines the <code>server_version</code> field.\nDefines the <code>gno</code> value.\nSets the <code>immediate_commit_timestamp</code> value.\nSets the <code>immediate_server_version</code> value.\nSets the <code>incident_type</code> value.\nSets the <code>last_committed</code> value.\nSets the <code>lc_typecode</code> value to …\nSets the <code>message</code> value.\nSets the <code>name</code> field value.\nSets the <code>original_commit_timestamp</code> value.\nSets the <code>original_server_version</code> value.\nSets the <code>payload</code> field value.\nSets the <code>payload_size</code> field value.\nSets the <code>position</code> field value.\nSets the <code>query</code> value.\nSets the <code>query</code> value.\nSets the <code>schema</code> value (max length is `u8::MAX).\nSets the <code>schema</code> value (max length is `u8::MAX).\nSets the <code>sequence_number</code> value.\nDefines the <code>server_version</code> field.\nDefines the <code>sid</code> value.\nSets the <code>start_pos</code> value.\nSets the <code>status_vars</code> value (max length is `u16::MAX).\nSets the <code>status_vars</code> value (max length is `u16::MAX).\nSets the <code>subtype</code> value.\nSets the <code>thread_id</code> value.\nSets the <code>thread_id</code> value.\nSets the <code>tx_length</code> value.\nSets the <code>uncompressed_size</code> field value.\nSets the <code>value</code> value.\nWrites this event into the <code>output</code>.\nAn Array (see <code>ComplexType</code>).\nAn iterator over keys of an object.\nType of a complex jsonb value (array or object).\nJSONB array or object.\nA key of a JSONB object.\n1-byte JSONB type marker\nLarge array/object storage format. See <code>StorageFormat</code>.\n1-byte JSONB literal type\nThe size of offset or size fields.\nAn Object (see <code>ComplexType</code>).\nAn iterator over entries of an object.\nA key of a JSONB object.\nAn iterator over keys of an object.\nJSONB opaque value\nSmall array/object storage format. See <code>StorageFormat</code>.\nJSONB storage format for objects and arrays. See …\nJsonb Value.\nReturns the value data as a string (lossy converted).\nReturns the raw value data.\nReturns an element at the given position.\nReturns the number of lements.\nReturns the number of lements in array or buffer.\nReturns the field type of an opaque value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculates header size for this type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns true if this value is an array.\nReturns true if this value is f64.\nReturns true if this value is an int (i16, i32 or i64).\nReturns true if this value is an object.\nReturns true if this value is an int (u16, u32 or u64).\nReturns an iterator over entries of an array.\nReturns an iterator over entries of an object.\nReturns a key with the given index.\nReturns an iterator over keys of an object.\nReturns the string value as UTF-8 string (lossy converted).\nReturns the raw string value.\nReturns the value of a key as a string (lossy converted).\nCalculates an offset to the given value entry.\nReturns the raw value of a key.\nReturns the value type.\nAdd a new element at the given path.\nA class that represents a logical change to a JSON …\nAn operation kind of a JsonDiff object.\nThe JSON value at the given path is removed from an array …\nThe JSON value in the given path is replaced with a new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns JsonDiff operation.\nReturns the raw JsonDiff path.\nReturns the JsonDiff path as a string (lossy converted).\nReturns JsonDiff value (if any).\nRepresentation of a binlog row.\nBinlog rows event row value options.\nStore JSON updates in partial form\nReturns reference to the value of a column with index <code>index</code>…\nColumn offset.\nReturns columns of this row.\nReturns columns of this row.\nValue conversion error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the row has a length of 0.\nReturns length of a row.\nWill take value of a column with index <code>index</code> if it exists …\nUnwraps values of a row.\nValue of a binlog event.\nValue of a partial JSON modification event.\nJSONB value.\nMySql value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nMySQL server collation\nMySql collation type.\nThis is a stub\nGet the charset.\nGet the collation.\nReturns the argument unchanged.\nu16 conversion.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a collation ID to a collation.\nGet the collation ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the collation compiled?\nIs the collation default?\nGet the max length.\nGet the padding attribute.\nResolve collation id into a collation.\nGet the sort length.\nField is a autoincrement field.\nField is binary.\nField is a blob.\nDon’t close the connection for a user account with …\nCompression protocol supported.\nClient supports connection attributes.\nDatabase (schema) name can be specified on connect in …\nClient no longer needs EOF_Packet and will use OK_Packet …\nSend found rows instead of affected rows in EOF_Packet.\nClient only flag. Not used.\nIgnore spaces before ‘(’.\nThis is an interactive client. Use …\nCan use LOAD DATA LOCAL.\nGet all column flags. Longer flags in …\nUse the improved version of Old Password Authentication. …\nEnable/disable multi-results.\nEnable/disable multi-stmt support. Also sets …\nDon’t allow database.table.column.\nSpecial handling of ODBC behavior.\nThe client can handle optional metadata information in the …\nClient supports plugin authentication.\nEnable authentication response packet to be larger than …\nClient or server supports progress reports within error …\nMulti-results and OUT parameters in PS-protocol.\nSupport optional extension for query parameters into the …\nDon’t reset the options after an unsuccessful connect. …\nCapable of handling server state change information. Its a …\nUse SSL encryption for the session.\nVerify server certificate. Client only flag.\nClient knows about transactions.\nCompression protocol extended to support zstd compression …\nClient capability flags\nMySql column flags\nType of MySql column field\nMySql server commands\nMysql cursor type.\nchar *, to be converted to/from a decimal\nField is an enum.\nBitmask of flags that are usually set with <code>SET</code>.\nGeometry type.\ndouble long long\nnot valid for UDFs\nType of the user defined function return slot and …\nField is part of a key.\nSupport Multi factor authentication.\nField can’t be NULL.\nField doesn’t have default value.\nField is num (for clients).\nField is set to NOW on UPDATE.\nIntern; Part of some key.\nField is part of a primary key.\nnot valid for UDFs\nMulti query - next query exists.\nTo mark ResultSet containing output parameter values.\nThis status flag, when on, implies that one of the state …\nIntroduced by mariadb. Contain the information about …\nServer in auto_commit mode.\nThe server was able to fulfill the clients request and …\nA database was dropped.\nIs raised when a multi-statement transaction has been …\nSet at the same time as SERVER_STATUS_IN_TRANS if the …\nThis flag is sent when a read-only cursor is exhausted, in …\nSent to the client if after a prepared statement reprepare …\nSee also: session_track_gtids.\nCurrent schema.\ntrack session state changes\nSession system variables.\nTransaction characteristics.\nTransaction state.\nField is a set.\nchar *\nType of state change information (part of MySql’s Ok …\nBitmask of flags that are usually set with <code>SET sql_mode</code>.\nMySql server status flags\nMySql stmt execute params flags.\nMySql stmt execute params flags.\nField is a timestamp.\nField is part of a unique key.\nField is unsigned.\nField is zerofill.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHelper function to encrypt mysql password using a public …\nType of a der-encoded public key.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nder bytes -&gt; (unused bits, bytes of bit string, rest of …\nExtracts modulus and exponent from specified der public …\nExtracts modulus and exponent from pkcs1 der public key …\nExtracts modulus and exponent from pkcs8 der public key …\nder bytes -&gt; (sequence bytes, rest of der bytes)\nder bytes -&gt; (uint, rest of der bytes)\nConverts pem encoded RSA public key to der.\nPadding operation trait.\nPadding, as described in PKCS #1: RSA Cryptography …\nPadding, as described in PKCS #1: RSA Encryption Version …\nWill encrypt block with public key.\nReturns exponent of the public key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWill parse public key from pem representation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns modulus of the public key.\nBasic constructor.\nReturns number of octets in the modulus.\nPadding operation for <code>input</code> bytes, where <code>k</code> is the length …\nWill pad input according to PKCS #1 v2 with encoding …\nSame as <code>eat</code>. Returns <code>None</code> if buffer is too small.\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nSame as <code>eat_lenenc_int</code>. Returns <code>None</code> if buffer is too …\nSame as <code>eat_lenenc_str</code>. Returns <code>None</code> if buffer is too …\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nSame as <code>eat_u32_str</code>. Returns <code>None</code> if buffer is too small.\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nConsumes a number from the head of the buffer. Returns <code>None</code>…\nSame as <code>eat_u8_str</code>. Returns <code>None</code> if buffer is too small.\nSame as <code>skip</code> but returns <code>false</code> if buffer is too small.\nSplits the buffer into two at the given index. Returns …\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes MySql length-encoded integer from the head of the …\nConsumes MySql length-encoded string from the head of the …\nConsumes null-terminated string from the head of the …\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes MySql string with u32 length prefix from the head …\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes a number from the head of the buffer.\nConsumes MySql string with u8 length prefix from the head …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if buffer is empty.\nReturns the number of bytes in the buffer.\nChecked <code>parse</code>.\nReturns <code>T: MyDeserialize</code> deserialized from <code>self</code>.\nWrites a 3-bytes signed integer.\nWrites a 7-bytes signed integer.\nWrites an unsigned integer to self as MySql length-encoded …\nWrites a slice to self as MySql length-encoded string.\nWrites a 3-bytes unsigned integer.\nWrites a string with u32 length prefix. Truncates, if the …\nWrites a 6-bytes unsigned integer.\nWrites a 7-bytes unsigned integer.\nWrites a string with u8 length prefix. Truncates, if the …\nReads MySql’s length-encoded integer.\nReads MySql’s length-encoded string.\nSkips the given number of bytes.\nWrites MySql’s length-encoded integer.\nWrites MySql’s length-encoded string.\nReturns length of length-encoded-integer representation of …\nReturns length of lenght-encoded-string representation of <code>s</code>…\nVarious parsing/serialization primitives.\nSplits server ‘version’ string into three numeric …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSame as <code>RawConst&lt;T, U&gt;</code> but holds <code>U</code> instead of <code>T</code>, i.e. …\nWrapper for a raw value of a MySql constant, enum variant …\nReturns the argument unchanged.\nReturns the argument unchanged.\nTries to parse the raw value as <code>U</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Const</code>.\nCreates a new wrapper.\nA byte sequence without length.\n<code>BareBytes</code> with <code>u16</code> len.\n<code>BareBytes</code> with <code>u8</code> len.\nRepresentation of a serialized bytes.\nConstantly known byte string.\nA byte sequence that lasts from the current position to …\nA fixed length byte sequence (right-padded with <code>0x00</code>).\nMaximum length of bytes for this repr (depends on how …\nNull-terminated byte sequence.\nWrapper for a raw byte sequence, that came from a server.\nA byte sequence prepended by it’s u32 length.\nA byte sequence prepended by it’s u8 length.\nReturns the <em>effective</em> bytes (see <code>RawBytes::len</code>).\nReturns the value as a UTF-8 string (lossy contverted).\nImplementation must check the length of the buffer if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts self to a ’static version.\nReturns <code>true</code> if bytes is empty.\nReturns the <em>effective</em> length of a string, which is no more …\nWraps the given value.\nWrapper for raw flags value.\nReturns the argument unchanged.\nReturns parsed flags. Unknown bits will be truncated.\nCalls <code>U::from(self)</code>.\nCreate new flags.\nConstant u8 value.\nConstant u8 value.\nSerialized representation of an integer.\nLittle-endian i16.\nLittle-endian i24.\nLittle-endian i32.\nLittle-endian i56.\nLittle-endian i64.\nLittle-endian u16.\nLittle-endian u24.\nLittle-endian u32.\nLower 2 bytes of a little-endian u32.\nUpper 2 bytes of a little-endian u32.\nLittle-endian u48.\nLittle-endian u56.\nLittle-endian u64.\nLength-encoded integer.\nWrapper for an integer, that defines serialization and …\nVarialbe-length integer (used within JSONB).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of items in a sequence (depends on how …\nSame as <code>RawCons</code> but for a sequence of values.\nSequence of serialized values (length serialized as <code>U</code>).\nRepresentation of a serialized bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns raw value at the given position.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns true if this sequence is empty.\nReturns <code>true</code> if the sequence has a length of 0.\nReturns a length of this sequence.\nReturns a length of this sequence.\nCreates a new wrapper.\nAppends an element to this sequence.\nAppears if a statement have both named and positional …\nParsed named params (see <code>ParsedNamedParams::parse</code>).\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNames of named parameters in order of appearance.\nParse named params in the given query.\nReturns a query string to pass to MySql (named parameters …\nExtra auth-data beyond the initial challenge.\nAuthentication plugin\nAuthentication Method Switch Request Packet.\nIf there is no more event to send a EOF_Packet instead of …\nEmpty flags of a <code>LoadEvent</code>.\nDefault since MySql v8.0.4\nClear password for <code>mysql_clear_password</code> plugin.\nRepresents MySql Column (column packet).\nCommand to request a binlog-stream from the master …\nCommand to request a binlog-stream from the master …\nRegisters a slave at the master. Should be sent before …\nCOM_TABLE_DUMP command.\nOk packet that is not a result set terminator.\nMySql error packet.\nGnoInterval. Stored within <code>Sid</code>\nRepresents MySql’s initial handshake packet.\nRepresents MySql’s local infile packet.\nClient-Side Cleartext Pluggable Authentication\nLegacy authentication plugin\nOld Password Authentication\nAuth data for the <code>mysql_native_password</code> plugin.\nThis packet terminates a binlog network stream.\nNull-bitmap.\nRepresents MySql’s Ok packet.\nRepresents MySql’s Ok packet.\nOK packet kind (see <em>OK packet identifier</em> section of WL#7766…\nAuth data for the <code>mysql_old_password</code> plugin.\nOld Authentication Method Switch Request Packet.\nOld deprecated EOF packet.\nProgress report information (may be in an error packet of …\nA server response to a <code>PublicKeyRequest</code> containing a …\nOk packet that terminates a result set (text or binary).\nEach Semi Sync Binlog Event with the <code>SEMI_SYNC_ACK_REQ</code> …\nMySql error packet.\nRepresents change in session state (part of MySql’s Ok …\nAuth data for <code>sha2_password</code> and <code>caching_sha2_password</code> …\nSID is a part of the <code>COM_BINLOG_DUMP_GTID</code> command. It’s …\nMySql error state.\nRepresents MySql’s statement packet.\nLength of a Uuid in <code>COM_BINLOG_DUMP_GTID</code> command packet.\nValue of the affected_rows field of an Ok packet.\nGet a flags value with all known bits set.\nReturns an sql state as bytes.\nReturns an sql state as a string (lossy converted).\nAuth plugin of a handshake packet\nValue of the auth_plugin_name field of an initial …\nValue of the auth_plugin_name field of an initial …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nValue of a server capabilities.\nReturns value of the character_set field of a column …\nChecks if the [start, end) interval is valid and creates …\nReturns value of the column_length field of a column …\nReturns value of the column_type field of a column packet.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nValue of the connection_id field of an initial handshake …\nWhether all set bits in a source flags value are also set …\nReturns raw session state info data.\nReturns the <code>database</code> field value as a UTF-8 string (lossy …\nReturns the raw <code>database</code> field value.\nReturns value of the decimals field of a column packet.\nTries to decode session state info data.\nValue of the default_collation field of an initial …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nReturns an error code.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nValue of the file_name field of a local infile packet as a …\nValue of the file_name field of a local infile packet as a …\nReturns the <code>filename</code> field value as a string (lossy …\nReturns the <code>filename</code> field value as a UTF-8 string (lossy …\nReturns the <code>filename</code> field value as a UTF-8 string (lossy …\nReturns the raw <code>filename</code> field value.\nReturns the raw <code>filename</code> field value.\nReturns the <code>filename</code> field value.\nReturns value of the flags field of a column packet.\nReturns parsed <code>flags</code> field with unknown bits truncated.\nReturns the <code>flags</code> field value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nCreates new null-bitmap from given bytes.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGenerates auth plugin data for this plugin.\nReturns the <code>hostname</code> field as a UTF-8 string (lossy …\nReturns the raw <code>hostname</code> field value.\nValue of the info field of an Ok packet as a byte slice.\nValue of the info field of an Ok packet as a string (lossy …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nReturns the <code>intervals</code> field value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nReturns false if this error packet contains progress …\nReturns <code>true</code> if given column is <code>NULL</code> in this <code>NullBitmap</code>.\nReturns true if this error packet contains progress report.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nValue of the last_insert_id field of an Ok packet.\nParsed mariadb server version.\nReturns the <code>master_id</code> field of the packet.\nReturns an error message.\nReturns an error message as a string (lossy converted).\nReturns value of the name field of a column packet as a …\nReturns value of the name field of a column packet as a …\nCreates new sql state.\nCreates new null-bitmap for a given number of columns.\nCreates new <code>ComRegisterSlave</code> with the given server …\nCreates new instance.\nCreates new instance with default values for <code>pos</code> and <code>flags</code>.\nCreates a new interval.\nCreates a new instance.\nCreates new instance with default values for <code>pos</code>, <code>data</code> and …\nReturns concatenated auth plugin nonce.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nValue of the num_columns field of a statement packet.\nValue of the num_params field of a statement packet.\nReturns value of the org_name field of a column packet as …\nReturns value of the org_name field of a column packet as …\nReturns value of the org_table field of a column packet as …\nReturns value of the org_table field of a column packet as …\nReturns the <code>password</code> field as a UTF-8 string (lossy …\nReturns the raw <code>password</code> field value.\nReturns the <code>port</code> field of the packet.\nReturns parsed <code>pos</code> field with unknown bits truncated.\nReturns the <code>pos</code> field value.\nReturns the <code>position</code> field value.\nProgress as ‘% * 1000’\nWill panic if ErrPacket does not contains progress report\nValue of the protocol_version field of an initial …\nWill read null-bitmap for a given number of columns from …\nThe intersection of a source flags value with the …\nReturns the <code>replication_rank</code> field of the packet.\nThe server’s RSA public key in PEM format.\nReturns value of the schema field of a column packet as a …\nReturns value of the schema field of a column packet as a …\nValue of the scramble_1 field of an initial handshake …\nValue of the scramble_2 field of an initial handshake …\nWill panic if ErrPacket does not contains a <code>ServerError</code>.\nReturns the <code>server_id</code> field of the packet.\nReturns parsed <code>server_id</code> field with unknown bits truncated.\nReturns the <code>server_id</code> field value.\nParsed server version.\nValue of the server_version field of an initial handshake …\nValue of the server_version field of an initial handshake …\nTries to parse session state info, if any.\nReturns raw reference to a session state info.\nSets flag value for given column.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns the sequence of sids in this packet.\nReturns an sql state.\n1 to max_stage\nStatus or state name as a byte slice.\nStatus or state name as a string (lossy converted).\nValue of the statement_id field of a statement packet.\nValue of the status_flags field of an Ok packet.\nValue of a status flags.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the <code>table</code> field value as a UTF-8 string (lossy …\nReturns the raw <code>table</code> field value.\nReturns value of the table field of a column packet as a …\nReturns value of the table field of a column packet as a …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the <code>user</code> field as a UTF-8 string (lossy converted).\nReturns the raw <code>user</code> field value.\nReturns the <code>uuid</code> field value.\nValue of the warning_count field of a statement packet.\nValue of the warnings field of an Ok packet.\nSets the <code>filename</code> field value.\nDefines filename for this instance.\nDefines filename for this instance.\nDefines flags for this instance.\nSets the <code>flags</code> field value.\nSets the <code>hostname</code> field of the packet (maximum length is …\nAppends an GnoInterval to this block.\nSets the <code>intevals</code> value for this block.\nSets the <code>master_id</code> field of the packet.\nSets the <code>password</code> field of the packet (maximum length is …\nSets the <code>port</code> field of the packet.\nDefines position for this instance.\nSets the <code>pos</code> field value.\nSets the <code>position</code> field value.\nSets the <code>replication_rank</code> field of the packet.\nSets the <code>server_id</code> field value.\nSets the <code>sid_block</code> field value.\nSets the <code>sid_block</code> field value.\nSets the <code>user</code> field of the packet (maximum length is 255 …\nBinlog request representation. Please consult MySql …\nFilename of the binlog on the master as a UTF-8 string …\nFilename of the binlog on the master (defaults to an empty …\nIf <code>use_gtid</code> is <code>false</code>, then all flags except …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates new request with the given slave server id.\nPosition in the binlog-file to start the stream with …\nServer id of a slave.\nIf <code>use_gtid</code> is <code>false</code>, then this value will be ignored …\nIf true, then <code>COM_BINLOG_DUMP_GTID</code> will be used (defaults …\nReturns modified <code>self</code> with the given value of the <code>filename</code> …\nReturns modified <code>self</code> with the given value of the <code>flags</code> …\nReturns modified <code>self</code> with the given value of the <code>pos</code> …\nReturns modified <code>self</code> with the given value of the <code>server_id</code>…\nReturns modified <code>self</code> with the given value of the …\nReturns modified <code>self</code> with the given value of the <code>use_gtid</code> …\nA client request for a server public RSA key, used by some …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis tracker type indicates that GTIDs are available and …\nThis tracker type indicates that the default schema has …\nRepresents a parsed change in a session state (part of …\nThis tracker type indicates that one or more tracked …\nThis tracker type indicates that transaction …\nThis tracker type indicates that transaction state …\nThis tracker type is unknown/unsupported.\nReturns a raw GTID string.\nReturns a raw schema name.\nReturns a raw value.\nReturns a raw value.\nReturns a value as a slice of bytes.\nReturns a GTID string (lossy converted).\nReturns schema name (lossy converted).\nReturns a value (lossy converted).\nReturns a value (lossy converted).\nReturns a value as a string (lossy converted).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of self.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a raw name.\nReturns a name (lossy converted).\nReturns a raw value.\nReturns a value (lossy converted).\n<code>FromValue</code> conversion error.\nRepresentations of parameters of a prepared statement.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWill convert named parameters into positional assuming …\nDerives <code>FromRow</code>. See <code>mysql_common</code> crate-level docs for …\nDerives <code>FromValue</code>. See <code>mysql_common</code> crate-level docs for …\nBinary protocol marker.\nSome structs defines deserialization in the context of …\nDeserialization for various MySql types.\nSerialization for various MySql types.\nSize hint of a serialized value (in bytes), if it’s …\nText protocol marker.\nMySql protocol codec implementation.\nDeserializes self from the given <code>buf</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSerializes self into the <code>buf</code>.\nChunk is being decoded.\nDecoder for MySql protocol chunk.\nChunk info.\nStores information about compressed packet being decoded.\nDecoder for MySql compressed packet.\nCompressed(&lt;needed&gt;, &lt;uncompressed len&gt;)\nWhen compressing data, the compression level can be …\nDecoder is waiting for the first or subsequent packet …\nDecoder is waiting for compressed packet header.\nLast chunk in a packet. Stores chunk sequence id.\nA packet chunk with given sequence id that isn’t last in …\nDecoder is decoding a packet.\nCodec for MySql protocol packets.\nUncompressed(&lt;needed&gt;)\nOptimize for the size of data being encoded.\nWill compress all data from <code>src</code> to <code>dst</code>.\nTurns compression on.\nWill try to decode MySql packet chunk from <code>src</code> to <code>dst</code>.\nWill try to decode compressed packet from <code>src</code> into <code>dst</code>.\nWill try to decode a packet from <code>src</code> into <code>dst</code>.\nWill encode packets into <code>dst</code>.\nOptimize for the best speed of encoding.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an integer representing the compression level, …\nMaximum size of a packet for this codec.\nCreates a new description of the compression level with an …\nNo compression is to be performed, this may actually …\nWill split given <code>packet</code> to MySql packet chunks and write …\nSets sequence id to <code>0</code>.\nOverwrites plain sequence id with compressed sequence id.\nNumber of bytes needed to finish this chunk.\nSequence id of chunk being decoded.\nCompressed packet size information.\nCompressed packet sequence id.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSynchronous framed stream for MySql protocol.\nReturns reference to a codec.\nReturns mutable reference to a codec.\nCreates new instance from given buffers, <code>codec</code> and <code>stream</code>.\nConsumes self and returns wrapped buffers, codec and …\nWill flush wrapped stream.\nReturns the argument unchanged.\nReturns mutable reference to a stream.\nReturns reference to a stream.\nCalls <code>U::from(self)</code>.\nCreates new instance with the given <code>stream</code>.\nReturns <code>true</code> if <code>dst</code> contains the next packet.\nWill send packets into the stream. Stream will be flushed.\nWill write packets into the stream. Stream may not be …\nThings that may be used as an index of a row column.\nClient side representation of a MySql row.\nRow deserializer.\nReturns reference to the value of a column with index <code>index</code>…\nReturns columns of this row.\nReturns columns of this row.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWill copy value at index <code>index</code> if it was not taken by …\nWill copy value at index <code>index</code> if it was not taken by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the row has a length of 0.\nReturns length of a row.\nCreates <code>Row</code> from values and columns.\nWill take value of a column with index <code>index</code> if it exists …\nWill take value of a column with index <code>index</code> if it exists …\nUnwraps values of a row.\nTrait to convert <code>Row</code> into a tuple of <code>FromValue</code> …\n<code>FromRow</code> conversion error.\nReturns the argument unchanged.\nWill <em>panic</em> if could not convert <code>row</code> to <code>T</code>.\nWill return <code>Err(row)</code> if could not convert <code>row</code> to <code>T</code>\n<code>FromRow</code> implementation for <code>frunk::HList</code>.\nCalls <code>U::from(self)</code>.\nRepresents the most basic non-empty HList. Its value is …\nRepresents the right-most end of a heterogeneous list\nExtend the contents of this HList with another HList\nExtend the contents of this HList with another HList\nPerform a left fold over an HList.\nPerform a left fold over an HList.\nPerform a right fold over an HList.\nPerform a right fold over an HList.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrow an element by type from an HList.\nMutably borrow an element by type from an HList.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReverse the HList.\nReverse the HList.\nTurns an HList into nested Tuple2s, which are less …\nReturns whether a given HList is empty\nReturns whether a given HList is empty\nReturns the length of a given HList\nReturns the length of a given HList\nApply a function to each element of an HList.\nApply a function to each element of an HList.\nRemove an element by type from an HList.\nReturns the head of the list and the tail of the list as a …\nPrepend an item to the current HList\nPrepend an item to the current HList\nConsume the current HList and return an HList with the …\nConsume the current HList and return an HList with the …\nReturn an <code>HList</code> where the contents are mutable references …\nReturn an <code>HList</code> where the contents are mutable references …\nReturn an HList where the contents are references to the …\nReturn an HList where the contents are references to the …\nZip two HLists together.\nZip two HLists together.\nScramble algorithm used in mysql_native_password.\nScramble algorithm used in cached_sha2_password fast path.\nNull-bitmap offset of this side.\nBinary value representation.\nClient side serialization. Null-bitmap bit offset: <code>0</code>.\nyear, month, day, hour, minutes, seconds, micro seconds\nSide of MySql value serialization.\nServer side serialization. Null-bitmap bit offset: <code>2</code>.\nTextual value representation.\nis negative, days, hours, minutes, seconds, micro seconds\nClient side representation of a value of MySql column.\nDeserializer for a MySql value.\nReturns length in binary serialized form.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImplement this trait to convert a value to some type.\n<code>FromValue</code> conversion error.\nIntermediate result of a <code>Value</code>-to-<code>Option&lt;T&gt;</code> conversion.\nIntermediate result for a type that requires parsing.\nIntermediate result for a type that optionally requires …\nType instance is successfully parsed from this value.\nType instance is ready without parsing.\nThis module implements conversion from/to <code>Value</code> for …\nThis module implements conversion from/to <code>Value</code> for <code>BigInt</code> …\nThis module implements conversion from/to <code>Value</code> for <code>Decimal</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWill panic if could not convert <code>v</code> to <code>T</code>\nWill panic if could not convert <code>v</code> to <code>Self</code>.\nWill return <code>Err(FromValueError(v))</code> if could not convert <code>v</code> …\nWill return <code>Err(Error::FromValueError(v))</code> if could not …\nWill return <code>Err(Error::FromValueError(v))</code> if <code>v</code> is not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis module implements conversion from/to <code>Value</code> for <code>time</code> …\nThis module implements conversion from/to <code>Value</code> for <code>Uuid</code>.\nUse it to parse <code>T: Deserialize</code> from <code>Value</code>.\nUse it to pass <code>T: Serialize</code> as JSON to a prepared …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")