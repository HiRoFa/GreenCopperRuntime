searchState.loadedDescShard("mysql_async", 0, "Tokio based asynchronous MySql client library for The Rust …\nPhantom struct used to specify MySql binary protocol.\nBinlog event stream.\nBinlog stream request builder.\n<code>COM_CHANGE_USER</code> options.\nRepresents MySql Column (column packet).\nWhen compressing data, the compression level can be …\nMySql server connection.\nDefault <code>inactive_connection_ttl</code> of a pool.\nDefault pool constraints.\nEach connection will cache up to this number of statements …\nDefault <code>ttl_check_interval</code> of a pool.\nyear, month, day, hour, minutes, seconds, micro seconds\nUse it to parse <code>T: Deserialize</code> from <code>Value</code>.\nThis type enumerates driver errors.\nContains the error value\nThis type enumerates library errors.\n<code>FromRow</code> conversion error.\n<code>FromValue</code> conversion error.\nGnoInterval. Stored within <code>Sid</code>\nThis tracker type indicates that GTIDs are available and …\nLOCAL INFILE data is a stream of <code>std::io::Result&lt;Bytes&gt;</code>.\nThis type enumerates IO errors.\nTransaction isolation level.\nContains the success value\nRepresents MySql’s Ok packet.\nMysql connection options.\nProvides a way to build <code>Opts</code>.\nRepresentations of parameters of a prepared statement.\nErrors that can occur during parsing.\nAsynchronous pool of MySql connections.\nConnection pool constraints.\nConnection pool options.\nResult of a query or statement execution.\nRepresentation of a prepared statement query.\nResult type alias for this library.\nRows stream for a single result set.\nClient side representation of a MySql row.\nThis tracker type indicates that the default schema has …\nUse it to pass <code>T: Serialize</code> as JSON to a prepared …\nThis type represents MySql server error.\nRepresents a parsed change in a session state (part of …\nRepresents change in session state (part of MySql’s Ok …\nSID is a part of the <code>COM_BINLOG_DUMP_GTID</code> command. It’s …\nSsl Options.\nPrepared statement.\nThis tracker type indicates that one or more tracked …\nPhantom struct used to specify MySql text protocol.\nis negative, days, hours, minutes, seconds, micro seconds\nThis struct represents MySql transaction.\nThis tracker type indicates that transaction …\nThis tracker type indicates that transaction state …\nTransaction options.\nThis tracker type is unknown/unsupported.\nThis type enumerates connection URL errors.\nClient side representation of a value of MySql column.\nHandles <code>LOCAL INFILE</code> requests from filesystem using an …\nReturns the absolute TTL, if set.\nThe pool will close a connection when this absolute TTL …\nReturns the absolute TTL’s jitter bound, if set.\nUpper bound of a random value added to the absolute TTL, …\nNumber of affected rows as reported by the server, or <code>0</code>.\nReturns the number of rows affected by the last <code>INSERT</code>, …\nSee <code>Conn::affected_rows</code>.\nValue of the affected_rows field of an Ok packet.\nReturns a raw GTID string.\nReturns a raw schema name.\nReturns a raw value.\nReturns a raw value.\nReturns a value as a slice of bytes.\nReturns reference to the value of a column with index <code>index</code>…\nReturns a GTID string (lossy converted).\nReturns schema name (lossy converted).\nReturns a value (lossy converted).\nReturns a value (lossy converted).\nReturns a value as a string (lossy converted).\nOptimize for the size of data being encoded.\nReturns length in binary serialized form.\nExecutes <code>COM_CHANGE_USER</code>.\nReturns value of the character_set field of a column …\nChecks if the [start, end) interval is valid and creates …\nReturns <code>true</code> if <code>CLIENT_FOUND_ROWS</code> capability is enabled …\nEnables or disables <code>CLIENT_FOUND_ROWS</code> capability. See …\nCloses the stream’s <code>Conn</code>. Additionally, the connection …\nCollects the current result set of this query result.\nCollects the current result set of this query result and …\nReturns value of the column_length field of a column …\nReturns value of the column_type field of a column packet.\nReturns a copy of a columns list of this query result.\nSee <code>QueryResult::columns</code>.\nReturned columns.\nReturns columns of this row.\nReturns a reference to a columns list of this query result.\nSee <code>QueryResult::columns_ref</code>.\nReturns columns of this row.\nPerforms <code>COMMIT</code> query.\nIf not <code>None</code>, then client will ask for compression if …\nDefines compression. See <code>Opts::compression</code>.\nPool will close connection if time since last IO exceeds …\nDefines connection TTL. See <code>Opts::conn_ttl</code>.\nMySql connection identifier.\nIf true, then <code>START TRANSACTION WITH CONSISTENT SNAPSHOT</code> …\nReturns pool constraints.\nReturns raw session state info data.\nDatabase name (defaults to <code>None</code>).\nDefines database name. See <code>Opts::db_name</code>.\nReturns database name.\nReturns value of the decimals field of a column packet.\nTries to decode session state info data.\nAsync function that disconnects this pool from the server …\nDisconnects this connection from server.\nDrops this query result.\nReturns <code>true</code> if <code>mysql_clear_password</code> plugin support is …\nEnables Client-Side Cleartext Pluggable Authentication …\nOptimize for the best speed of encoding.\nReturns value of the flags field of a column packet.\nExecutes <code>fun</code> on every row of the current result set.\nExecutes <code>fun</code> on every row of the current result set and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates new builder from the given <code>Opts</code>.\nWill <em>panic</em> if could not convert <code>row</code> to <code>T</code>.\nWill return <code>Err(row)</code> if could not convert <code>row</code> to <code>T</code>\nCreates a new pool of connections.\nReturns a future that resolves to <code>Conn</code>.\nWill panic if could not convert <code>v</code> to <code>T</code>\nWill return <code>Err(FromValueError(v))</code> if could not convert <code>v</code> …\nFutures used in this crate\nWill copy value at index <code>index</code> if it was not taken by …\nTurns this connection into a binlog stream.\nAsync function that resolves to <code>Conn</code>.\nWill copy value at index <code>index</code> if it was not taken by …\nReturns a table map event for the given table id.\nNumber of warnings, as reported by the server in the last …\nSee <code>Conn::get_warnings</code>.\nReturns connection identifier.\nMySql statement identifier.\nReturns a <code>inactive_connection_ttl</code> value.\nText information as reported by the server, or an empty …\nText information, as reported by the server in the last OK …\nSee <code>Conn::info</code>.\nValue of the info field of an Ok packet as a byte slice.\nValue of the info field of an Ok packet as a string (lossy …\nCommands to execute once new connection is established.\nDefines initial queries. See <code>Opts::init</code>.\nReturns the <code>intervals</code> field value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of self.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nWill convert named parameters into positional assuming …\nAddress of mysql server (defaults to <code>127.0.0.1</code>). Hostnames …\nDefines server IP or hostname. See <code>Opts::ip_or_hostname</code>.\n<code>true</code> if there are no more rows nor result sets in this …\nReturns true if the row has a length of 0.\nReturns true if the error means that connection is broken.\nIf not <code>None</code>, then <code>SET TRANSACTION ISOLATION LEVEL ..</code> will …\nLast insert id, if any.\nReturns the ID generated by a query (usually <code>INSERT</code>) on a …\nSee <code>Conn::last_insert_id</code>.\nValue of the last_insert_id field of an Ok packet.\nReturns a reference to the last OK packet.\nReturns length of a row.\nReturns an integer representing the compression level, …\nHandler for local infile requests (defaults to <code>None</code>).\nDefines <em>global</em> LOCAL INFILE handler (see crate-level docs).\nMaps every row of the current result set to <code>U</code> using <code>fun</code>.\nMap every row of the current result set to <code>U</code> using <code>fun</code> and …\nUpper bound of this pool constraints.\nClient side <code>max_allowed_packet</code> value (defaults to <code>None</code>).\nDefines <code>max_allowed_packet</code> option. See …\nLower bound of this pool constraints.\nReturns a raw name.\nReturns value of the name field of a column packet as a …\nReturns a name (lossy converted).\nReturns value of the name field of a column packet as a …\nCreates a new request with the given slave server id.\nCreates a new description of the compression level with an …\nCreates a new pool of connections.\nReturns a future that resolves to <code>Conn</code>.\nCreates new identity with the given pkcs12 archive.\nCalls <code>Self::default</code>.\nCreates new <code>PoolConstraints</code> if constraints are valid (…\nCreates change user options that’ll reuse connection …\nCreates a default instance.\nCreates a new interval.\nCreates a new instance.\nNo compression is to be performed, this may actually …\nNumber of columns.\nNumber of parameters.\nReturns an <code>OkPacket</code> corresponding to this result set.\nReturns connection options.\nReturns value of the org_name field of a column packet as …\nReturns value of the org_name field of a column packet as …\nReturns value of the org_table field of a column packet as …\nReturns value of the org_table field of a column packet as …\nRequired parameters.\nThis macro is a convenient way to pass named parameters to …\nPassword (defaults to <code>None</code>).\nDefines password. See <code>Opts::pass</code>.\nReturns password.\nReturns the archive password.\nReturns the pkcs12 archive.\nConnection pool options (defaults to <code>Default::default</code>).\nDefines pool options. See <code>Opts::pool_opts</code>.\nPrefer socket connection (defaults to <code>true</code> <strong>temporary <code>false</code> </strong>…\nDefines <code>prefer_socket</code> option. See <code>Opts::prefer_socket</code>.\nTraits used in this crate\nIf not <code>None</code>, then <code>SET TRANSACTION READ ONLY|WRITE</code> will be …\nReduces rows of the current result set to <code>U</code> using <code>fun</code>.\nReduces rows of the current result set to <code>U</code> using <code>fun</code> and …\nExecutes <code>COM_RESET_CONNECTION</code>.\nTurns on/off automatic connection reset (see …\nReturns the <code>reset_connection</code> value (see …\nThe resolved IPs for the mysql server, if provided.\nDefines already-resolved IPs to use for the connection. …\nPerforms <code>ROLLBACK</code> query.\nReturns value of the schema field of a column packet as a …\nReturns value of the schema field of a column packet as a …\nDisables <code>mysql_old_password</code> plugin (defaults to <code>true</code>).\nDisables <code>mysql_old_password</code> plugin (defaults to <code>true</code>).\nReturns server version.\nTries to parse session state info, if any.\nReturns raw reference to a session state info.\nSetup <em>local</em> <code>LOCAL INFILE</code> handler (see “LOCAL INFILE …\nCommands to execute on new connection and every time …\nDefines setup queries. See <code>Opts::setup</code>.\nPath to unix socket (or named pipe on Windows) (defaults …\nDefines socket path. See <code>Opts::socket</code>.\nDriver will require SSL connection if this opts isn’t …\nDefines SSL options. See <code>Opts::ssl_opts</code>.\nStarts a new transaction.\nStarts a transaction.\nValue of the status_flags field of an Ok packet.\nNumber of prepared statements cached on the client side …\nDefines statement cache size. See <code>Opts::stmt_cache_size</code>.\nReturns a <code>Stream</code> for the current result set.\nOwned version of the <code>QueryResult::stream</code>.\nReturns value of the table field of a column packet as a …\nReturns value of the table field of a column packet as a …\nWill take value of a column with index <code>index</code> if it exists …\nWill take value of a column with index <code>index</code> if it exists …\nTCP keep alive timeout in milliseconds (defaults to <code>None</code>).\nDefines <code>tcp_keepalive</code> option. See <code>Opts::tcp_keepalive</code>.\nSet the <code>TCP_NODELAY</code> option for the mysql connection …\nDefines <code>tcp_nodelay</code> option. See <code>Opts::tcp_nodelay</code>.\nTCP port of mysql server (defaults to <code>3306</code>).\nDefines TCP port. See <code>Opts::tcp_port</code>.\nCollects the current result set of this query result.\nCollects the current result set of this query result and …\nReturns a <code>ttl_check_interval</code> value.\nUnwraps values of a row.\nUser (defaults to <code>None</code>).\nDefines user name. See <code>Opts::user</code>.\nReturns user.\nReturns the <code>uuid</code> field value.\nReturns a raw value.\nReturns a value (lossy converted).\nClient side <code>wait_timeout</code> value (defaults to <code>None</code>).\nDefines <code>wait_timeout</code> option. See <code>Opts::wait_timeout</code>.\nNumber of warnings as reported by the server, or <code>0</code>.\nValue of the warnings field of an Ok packet.\nSets an absolute TTL after which a connection is removed …\nOptionally, the absolute TTL can be extended by a …\nSee <code>TxOpts::consistent_snapshot</code>.\nCreates the default <code>PoolOpts</code> with the given constraints.\nIf <code>true</code> then client will accept invalid certificate …\nThe way to not validate the server’s domain name against …\nIf set, will override the hostname used to verify the …\nSet <code>Opts::db_name</code> to the given value.\nSets the filename of the binlog on the master (try …\nEnables GTID-based replication (disabled by default).\nAdds the given set of GTIDs to the request (ignored if not …\nThis hostname will be reported to the server (max len 255, …\nPool will recycle inactive connection if it is outside of …\nAppends an GnoInterval to this block.\nSets the <code>intevals</code> value for this block.\nSee <code>TxOpts::isolation_level</code>.\nEnables <code>NON_BLOCK</code> flag. Stream will be terminated as soon …\nSet <code>Opts::pass</code> to the given value.\nThis password will be reported to the server (max len 255, …\nSets the archive password.\nSets the pkcs12 archive.\nThis port number will be reported to the server (defaults …\nSets the start position (defaults to <code>4</code>).\nSee <code>TxOpts::readonly</code>.\nSets whether to reset connection upon returning it to a …\nSets path to a <code>pem</code> or <code>der</code> certificate of the root that …\nPool will check idling connection for expiration with this …\nThis username will be reported to the server (max len 255, …\nSet <code>Opts::user</code> to the given value.\nContains values in the following order:\nCRC32 of zlib algorithm\nEvents are without checksum though its generator is …\nEnumeration spcifying checksum algorithm used to encode a …\nDepending on the MySQL Version that created the binlog the …\nCharacter set of string columns.\nCollumn name of columns (included if …\nA flag that indicates column visibility attribute.\nIndicates that rows in this event are complete, that is …\nContains values in the following order:\nContains values in the following order:\nContains values in the following order:\nContains 2 bytes value of the collation_database system …\nCharacter set of string columns.\nContains 8 bytes unsigned little-endian integer carrying …\nContains 2 bytes unsigned little-endian integer carrying …\nContains 1 byte value.\nCharacter set of enum and set columns.\nCharacter set of enum and set columns.\nTotal number of known events.\nName of each variant in an ENUM columns.\nBinlog Event Flags\nBinlog Event Type\nContains 1 byte boolean.\nA format description event is the first event of a binlog …\nContains <code>Flags2</code> flags.\nReal type of geometry columns.\nGroup number of a Gtid event.\nGtid event flags.\nThere are possibly lost events in the replication stream.\nNo incident.\nIndicates the value to use for an <code>AUTO_INCREMENT</code> column in …\nType of an incident event.\nType of an <code>InvarEvent</code>.\nContains values in the following order:\nIndicates the value to use for the <code>LAST_INSERT_ID()</code> …\nEvent is created by the slaves SQL-thread and shouldn’t …\nGets unset in the <code>FORMAT_DESCRIPTION_EVENT</code> when the file …\nUnused.\nSetting this flag will mark an event as Ignorable.\nMTS: group of events can be marked to force its execution …\nEvents with this flag are not filtered (e.g. on the current\nEvent is created by the slaves IO-thread when written to …\nEvent doesn’t need default database to be updated (…\nevent is thread specific (<code>CREATE TEMPORARY TABLE</code> …).\nUnused.\nContains 2 bytes code identifying a table of month and day …\nVariants of this enum describe how LOAD DATA handles …\nTransaction may have changes logged with SBR.\nContains 4 bytes bitfield.\nContains 3 bytes unsigned little-endian integer.\nNo foreign key checks.\nEnumerates types of optional metadata fields.\nExtension of UPDATE_ROWS_EVENT, allowing partial values …\nPrimary key with prefix (included if …\nA <code>QUERY_EVENT</code> is created for each query that modifies the …\nNo unique key checks.\nThe rotate event is added to the binlog as last event to …\nRows event flags.\nName of each variant in a SET columns.\nUNSIGNED flag of numeric columns.\nPrimary key without prefix (included if …\nIgnored event.\nA start event is the first event of a binlog for …\nLast event of a statement.\nA <code>STOP_EVENT</code> has no payload or post-header.\nSemi-sync binlog flags.\nContains <code>SqlMode</code> flags.\nContains 1 byte value.\nBinlog query event status vars keys.\nContains 8 bytes value of the table map that is to be …\nContains values in the following order:\nThe supported compression algorithms for …\nThe on-the-wire fields for Transaction_payload\nIgnored event.\nContains values in the following order:\nFlags of a user variable.\nMySQL 3.23 - &lt; 4.0.0\nMySQL 4.0.0 - 4.0.1\nMySQL 4.0.2 - &lt; 5.0.0\nMySQL 5.0.0+\nPrepared XA transaction terminal event similar to Xid.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nMySql internal binary JSON representation.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nLength of an append block event post-header.\nAnonymous GTID event.\nNot yet implemented.\nIgnored by this implementation\nLength of a begin load query event post-header.\nLength of the checksum algorithm description.\nLength of the checksum.\nBegin load query event.\nBinlog event footer.\nThe binlog event header starts each event and is 19 bytes …\nMinimum MySql version that supports checksums.\nIgnored by this implementation.\nWill be empty if timezone length is <code>0</code>.\nSee <code>OptionalMetadataFieldType::COLUMN_CHARSET</code>.\nContains charset+collation for column.\nName of a column in <code>ColumnNames</code>.\nSee <code>OptionalMetadataFieldType::COLUMN_NAME</code>.\nContains names of columns.\nSee <code>OptionalMetadataFieldType::COLUMN_VISIBILITY</code>.\nIgnored.\nIgnored.\nLength of a delete file event post-header.\nOptional metadata field that contains charsets for columns.\nSee <code>OptionalMetadataFieldType::DEFAULT_CHARSET</code>.\nIgnored by this implementation\nDelete rows event.\nDelete rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nLength of an execute load query event extra header.\nLength of an execute load query event post-header.\nSee <code>OptionalMetadataFieldType::ENUM_AND_SET_COLUMN_CHARSET</code>.\nSee <code>OptionalMetadataFieldType::ENUM_AND_SET_DEFAULT_CHARSET</code>…\nString value for an ENUM column variant.\nSee <code>OptionalMetadataFieldType::ENUM_STR_VALUE</code>.\nContains string values for ENUM column.\nContains string values of ENUM columns.\nRaw binlog event.\nParsed event data.\nIgnored by this implementation\nExecute load query event.\n<code>0</code> is interpreted as <code>false</code> and everything else as <code>true</code>.\nLength of a fde event post-header.\nA format description event is the first event of a binlog …\nLength of a gtid events post-header.\nSee <code>OptionalMetadataFieldType::GEOMETRY_TYPE</code>.\nContains real types for every geometry column.\nGTID stands for Global Transaction IDentifier.\nLength of a heartbeat event post-header.\nLength of an ignorable event post-header.\nLength of an incident event post-header.\nLength of an intvar event post-header.\nUsed to log an out of the ordinary event that occurred on …\nInteger based session-variables event.\nBinlog event header length for version &gt;= 4.\nIgnored by this implementation\nIgnored by this implementation\nContains <code>column_id -&gt; charset+collation</code> mapping for …\nHelper struct that extracts optional metadata for columns.\nIterator over fields of an optional metadata.\nPartial update rows event.\nIgnored by this implementation\nIgnored by this implementation\nIgnored by this implementation\nNot yet implemented.\nInfo about primary key with a prefix (see …\nSee <code>OptionalMetadataFieldType::PRIMARY_KEY_WITH_PREFIX</code>.\nContains a sequence of primary keys with prefix.\nLength of a query event post-header, where 5.0 differs: 2 …\nLength of a query event post-header, where 3.23, 4.x and …\nA query event is created for each query that modifies the …\nLength of a rand event post-header.\nLength of a rotate event post-header.\nLength of a v1 rows query event post-header.\nLength of a rows events post-header.\nRand event.\nThe rotate event is added to the binlog as last event to …\nCommon base structure for all row-containing binary log …\nRows events are unified under this enum (see <code>EventData</code>).\nIterator over rows of a <code>RowsEvent</code>.\nQuery that caused the following <code>ROWS_EVENT</code>.\nLength of a server version string.\nOffset of a server version string.\nLength of a start event post-header.\nLength of a stop event post-header.\nString value for a SET column variant.\nSee <code>OptionalMetadataFieldType::SET_STR_VALUE</code>.\nContains string values for SET column.\nContains string values of SET columns.\nSee <code>OptionalMetadataFieldType::SIGNEDNESS</code>.\nContains a sequence of PK column indexes where PK doesn’…\nSee <code>OptionalMetadataFieldType::SIMPLE_PRIMARY_KEY</code>.\nIgnored by this implementation\nRaw status variable.\nStatus variable value.\nStatus variables of a QueryEvent.\nIterator over status vars of a <code>QueryEvent</code>.\nLength of a table map event post-header.\nLength of an incident event post-header.\nLength of a transaction payload event post-header.\nTable map event.\nWill be empty if timezone length is <code>0</code>.\nNot yet implemented.\nEvent that encloses all the events of a transaction.\nThis structure implements <code>io::BufRead</code> and represents the …\nLength of a user var event post-header.\nUpdate rows event.\nUpdate rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nUser variable event.\nLength of a view change event post-header.\nNot yet implemented.\nWrite rows event.\nWrite rows event v1 (mariadb and mysql 5.1.15-5.6.x).\nLength of a xa prepare event post-header.\nLength of a xid event post-header.\nNot yet implemented.\nXid event.\nReturns the algorithm.\nReturns the <code>binlog_version</code> field value.\nReturns the <code>block_data</code> value.\nCalculates checksum for this event.\nReturns the charset+collation.\nReturns the charset of the variable value (<code>0</code> if …\nReturns the checksum, if it is defined.\nReturns the column index.\nReturns the column index\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the after-image (only for WRITE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns columns in the before-image (only for DELETE and …\nReturns the number of columns\nReturns the <code>create_timestamp</code> field value.\nDecompress the whole payload.\nReturns a reference to the event data.\nReturns database name as a string (lossy converted).\nReturns raw database name value.\nReturns decompressed payload in form of a struct that …\nReturns the default charset.\nReturns the <code>dup_handling</code> value.\nReturns the <code>end_pos</code> value.\nReturns the <code>error_code</code> value.\nReturns the <code>error_code</code> value.\nReturns the <code>event_header_length</code> field value.\nReturns the size of the event (header, post-header, body).\nReturns an actual event type of this rows event.\nReturns the event type, if it’s valid.\nReturns the <code>event_type_header_lengths</code> field value.\nReturns the raw event type.\nReturns the <code>execution_time</code> value.\nReturns the <code>execution_time</code> value.\nReturns a reference to the corresponding format …\nReturns the <code>file_id</code> value.\nReturns the <code>file_id</code> value.\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns the <code>flags</code> value. Unknown bits will be truncated.\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns the flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags (unknown bits are truncated).\nReturns event flags.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the raw <code>flags</code> value.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the raw flags.\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns raw event flags (unknown bits are preserved).\nReturns the <code>footer</code> field value.\nReturns a reference to the event footer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns parsed checksum algorithm, or raw value if …\nReturns <code>true</code> if checksum is enabled.\nReturns metadata for the given column.\nReturns a type of the given column.\nReturns header length for the given event type, if defined.\nReturns raw type of the column as stored in the …\nReturns raw value of a status variable by key.\nReturns parsed value of this status variable, or raw value …\nReturns the <code>gno</code> value.\nReturns <code>false</code> if the reader is exhausted.\nReturns a reference to the event header.\nReturns the <code>immediate_commit_timestamp</code> value.\nReturns the <code>immediate_server_version</code> value.\nReturns the <code>incident_type</code> value, if it’s valid.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nConverts self to a ’static version.\nReturns true if it’s a fake <code>RotateEvent</code> (its log postion …\nThis is <code>true</code> if the value is null.\nReturns an iterator over QueryEvent status variables.\nFor every character column (in order) emits its character …\nReturns an iterator over charsets.\nFor every column (in order) emits its name\nFor every ENUM and SET column (in order) emits its …\nReturns an iterator over real types.\nReturns an iterator over column indexes.\nReturns an iterator over column indexes and corresponding …\nReturns an iterator over names of columns.\nIterates non-default charsets. Errors if data is malformed.\nIterates over column indexes for columns that are primary …\nFor every numeric column (in order) emits signedness data (…\nReturns an iterator over SET columns string values.\nReturns an iterator over ENUM columns string values.\nRuturns a number of JSON columns.\nReturns the <code>last_committed</code> value.\nReturns the <code>lc_typecode</code> value.\nReturns length of this load event in bytes.\nReturns length of this event in bytes.\nReturns the position of the next event.\nReturns <code>message</code> value as a string (lossy converted).\nReturns the raw <code>message</code> value.\nReturns name of the binlog to rotate to as a string (lossy …\nReturns the name as a string (lossy converted).\nReturns the name of the variable as a string (lossy …\nReturns raw name of the binlog to rotate to.\nReturns the raw name.\nReturns the raw name of the variable.\nCreates a new instance.\nCreates new instance.\nCreates a new instance.\nCreates a new instance.\nCreates new instance.\nCreates a new <code>RowsQueryEvent</code>.\nCreates new column name.\nCreates a new SET variant name.\nCreates a new ENUM variant name.\nCreates a new PK with prefix.\nCreates a new <code>BinlogEventHeader</code>.\nCreates new instance (<code>data</code> is not compressed).\nCreates new instance (<code>data</code> is ZSTD-compressed).\nReturns null-bitmap for this table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of columns in the table.\nReturns the number of variants in this SET column.\nReturns the number of variants in this ENUM column.\nReturns the <code>original_commit_timestamp</code> value.\nReturns the <code>original_server_version</code> value.\nReturns raw payload of the binlog event.\nReturns the payload_size.\nReturns the position within the binary log to rotate to.\nReturns the prefix length. <code>0</code> means that the whole column …\nReturns the <code>query</code> value as a string (lossy converted).\nReturns the <code>query</code> value as a string (lossy converted).\nReturns query as a string (lossy converted).\nReturns the <code>query</code> value.\nReturns the <code>query</code> value.\nReturns the raw query.\nReads an event from <code>input</code>.\nReads binlog event footer from the given buffer.\nReads event data. Returns <code>None</code> if event type is unknown.\nRead event-type specific data as a binlog struct.\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns an iterator over event’s rows given the …\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns raw rows data.\nReturns the <code>schema</code> value as a string (lossy converted).\nReturns the <code>schema</code> value as a string (lossy converted).\nReturns the <code>schema</code> value.\nReturns the <code>schema</code> value.\nReturns the <code>sequence_number</code> value.\nReturns the server Id of the originating mysql-server.\nReturns the <code>server_version</code> field value as string (lossy …\nReturns the <code>server_version</code> field value.\nSet checksum enabled flag.\nReturns the <code>sid</code> value.\nReturns a parsed MySql version.\nReturns the <code>start_pos</code> value.\nReturns an iterator over status variables.\nReturns an iterator over status variables.\nReturns the <code>status_vars</code> value.\nReturns the <code>status_vars</code> value.\nReturns the <code>subtype</code> value.\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the table identifier.\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns the number that identifies the table (see …\nReturns table name as a string (lossy converted).\nReturns raw table name value.\nReturns the <code>thread_id</code> value.\nReturns the <code>thread_id</code> value.\nReturns the <code>timestamp</code> value.\nReturns the <code>tx_length</code> value.\nReturns the uncompressed_size.\nReturns the <code>value</code> value.\nReturns the value as a string (lossy converted).\nReturns the value as a string (lossy converted).\nReturns the value of the variable (empty if <code>Self::is_null</code> …\nReturns the raw value.\nReturns the raw value.\nReturns the type of the variable value.\nReturns an iterator over string values of SET variants.\nReturns an iterator over string values of ENUM variants.\nSets the <code>algorithm</code> field value.\nDefines the <code>server_version</code> field.\nSets the <code>block_data</code> value.\nDefines the <code>server_version</code> field.\nSets the <code>dup_handling</code> value.\nSets the <code>end_pos</code> value.\nSets the <code>error_code</code> value.\nSets the <code>error_code</code> value.\nDefines the <code>server_version</code> field.\nSets the <code>execution_time</code> value.\nSets the <code>execution_time</code> value.\nSets the <code>file_id</code> value.\nSets the <code>file_id</code> value.\nDefines the <code>flags</code> value.\nDefines the <code>server_version</code> field.\nDefines the <code>gno</code> value.\nSets the <code>immediate_commit_timestamp</code> value.\nSets the <code>immediate_server_version</code> value.\nSets the <code>incident_type</code> value.\nSets the <code>last_committed</code> value.\nSets the <code>lc_typecode</code> value to …\nSets the <code>message</code> value.\nSets the <code>name</code> field value.\nSets the <code>original_commit_timestamp</code> value.\nSets the <code>original_server_version</code> value.\nSets the <code>payload</code> field value.\nSets the <code>payload_size</code> field value.\nSets the <code>position</code> field value.\nSets the <code>query</code> value.\nSets the <code>query</code> value.\nSets the <code>schema</code> value (max length is `u8::MAX).\nSets the <code>schema</code> value (max length is `u8::MAX).\nSets the <code>sequence_number</code> value.\nDefines the <code>server_version</code> field.\nDefines the <code>sid</code> value.\nSets the <code>start_pos</code> value.\nSets the <code>status_vars</code> value (max length is `u16::MAX).\nSets the <code>status_vars</code> value (max length is `u16::MAX).\nSets the <code>subtype</code> value.\nSets the <code>thread_id</code> value.\nSets the <code>thread_id</code> value.\nSets the <code>tx_length</code> value.\nSets the <code>uncompressed_size</code> field value.\nSets the <code>value</code> value.\nWrites this event into the <code>output</code>.\nAn Array (see <code>ComplexType</code>).\nAn iterator over keys of an object.\nType of a complex jsonb value (array or object).\nJSONB array or object.\nA key of a JSONB object.\n1-byte JSONB type marker\nLarge array/object storage format. See <code>StorageFormat</code>.\n1-byte JSONB literal type\nThe size of offset or size fields.\nAn Object (see <code>ComplexType</code>).\nAn iterator over entries of an object.\nA key of a JSONB object.\nAn iterator over keys of an object.\nJSONB opaque value\nSmall array/object storage format. See <code>StorageFormat</code>.\nJSONB storage format for objects and arrays. See …\nJsonb Value.\nReturns the value data as a string (lossy converted).\nReturns the raw value data.\nReturns an element at the given position.\nReturns the number of lements.\nReturns the number of lements in array or buffer.\nReturns the field type of an opaque value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculates header size for this type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns true if this value is an array.\nReturns true if this value is f64.\nReturns true if this value is an int (i16, i32 or i64).\nReturns true if this value is an object.\nReturns true if this value is an int (u16, u32 or u64).\nReturns an iterator over entries of an array.\nReturns an iterator over entries of an object.\nReturns a key with the given index.\nReturns an iterator over keys of an object.\nReturns the string value as UTF-8 string (lossy converted).\nReturns the raw string value.\nReturns the value of a key as a string (lossy converted).\nCalculates an offset to the given value entry.\nReturns the raw value of a key.\nReturns the value type.\nAdd a new element at the given path.\nA class that represents a logical change to a JSON …\nAn operation kind of a JsonDiff object.\nThe JSON value at the given path is removed from an array …\nThe JSON value in the given path is replaced with a new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nReturns JsonDiff operation.\nReturns the raw JsonDiff path.\nReturns the JsonDiff path as a string (lossy converted).\nReturns JsonDiff value (if any).\nRepresentation of a binlog row.\nBinlog rows event row value options.\nStore JSON updates in partial form\nReturns reference to the value of a column with index <code>index</code>…\nColumn offset.\nReturns columns of this row.\nReturns columns of this row.\nValue conversion error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the row has a length of 0.\nReturns length of a row.\nWill take value of a column with index <code>index</code> if it exists …\nUnwraps values of a row.\nValue of a binlog event.\nValue of a partial JSON modification event.\nJSONB value.\nMySql value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>&#39;static</code> version of <code>self</code>.\nField is a autoincrement field.\nField is binary.\nField is a blob.\nDon’t close the connection for a user account with …\nCompression protocol supported.\nClient supports connection attributes.\nDatabase (schema) name can be specified on connect in …\nClient no longer needs EOF_Packet and will use OK_Packet …\nSend found rows instead of affected rows in EOF_Packet.\nClient only flag. Not used.\nIgnore spaces before ‘(’.\nThis is an interactive client. Use …\nCan use LOAD DATA LOCAL.\nGet all column flags. Longer flags in …\nUse the improved version of Old Password Authentication. …\nEnable/disable multi-results.\nEnable/disable multi-stmt support. Also sets …\nDon’t allow database.table.column.\nSpecial handling of ODBC behavior.\nThe client can handle optional metadata information in the …\nClient supports plugin authentication.\nEnable authentication response packet to be larger than …\nClient or server supports progress reports within error …\nMulti-results and OUT parameters in PS-protocol.\nSupport optional extension for query parameters into the …\nDon’t reset the options after an unsuccessful connect. …\nCapable of handling server state change information. Its a …\nUse SSL encryption for the session.\nVerify server certificate. Client only flag.\nClient knows about transactions.\nCompression protocol extended to support zstd compression …\nClient capability flags\nMySql column flags\nType of MySql column field\nMySql server commands\nMysql cursor type.\nchar *, to be converted to/from a decimal\nField is an enum.\nBitmask of flags that are usually set with <code>SET</code>.\nGeometry type.\ndouble long long\nnot valid for UDFs\nType of the user defined function return slot and …\nField is part of a key.\nSupport Multi factor authentication.\nField can’t be NULL.\nField doesn’t have default value.\nField is num (for clients).\nField is set to NOW on UPDATE.\nIntern; Part of some key.\nField is part of a primary key.\nnot valid for UDFs\nMulti query - next query exists.\nTo mark ResultSet containing output parameter values.\nThis status flag, when on, implies that one of the state …\nIntroduced by mariadb. Contain the information about …\nServer in auto_commit mode.\nThe server was able to fulfill the clients request and …\nA database was dropped.\nIs raised when a multi-statement transaction has been …\nSet at the same time as SERVER_STATUS_IN_TRANS if the …\nThis flag is sent when a read-only cursor is exhausted, in …\nSent to the client if after a prepared statement reprepare …\nSee also: session_track_gtids.\nCurrent schema.\ntrack session state changes\nSession system variables.\nTransaction characteristics.\nTransaction state.\nField is a set.\nchar *\nType of state change information (part of MySql’s Ok …\nBitmask of flags that are usually set with <code>SET sql_mode</code>.\nMySql server status flags\nMySql stmt execute params flags.\nMySql stmt execute params flags.\nField is a timestamp.\nField is part of a unique key.\nField is unsigned.\nField is zerofill.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nFuture that disconnects this pool from a server and …\nThis future will take connection from a pool and resolve …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>FromValue</code> conversion error.\nRepresentations of parameters of a prepared statement.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTypes that can be treated as a MySQL query.\nHelper trait for batch statement execution.\nTrait to convert <code>Row</code> into a tuple of <code>FromValue</code> …\nDerives <code>FromRow</code>. See <code>mysql_common</code> crate-level docs for …\nImplement this trait to convert a value to some type.\nDerives <code>FromValue</code>. See <code>mysql_common</code> crate-level docs for …\nGlobal, <code>Opts</code>-level <code>LOCAL INFILE</code> handler (see “LOCAL …\nTrait for protocol markers <code>crate::TextProtocol</code> and …\nQuery protocol.\nMySql text query.\nMethods of this trait are used to execute database queries.\nEverything that is a statement.\nEverything that is a connection.\nHelper, that constructs <code>QueryWithParams</code>.\nCloses the given statement.\nExecutes the given statement and collects the first result …\nExecutes the given statement and collects the first result …\nExecutes the given statement for each item in the given …\nExecutes the given statement and drops the result.\nExecutes the given statement and drops the result.\nExecutes the given statement and returns the first row of …\nExecutes the given statement and returns the first row of …\nExecutes the given stmt and folds the first result set to …\nExecutes the given stmt and folds the first result set to …\nExecutes the given statement with given params.\nExecutes the given stmt and maps each row of the first …\nExecutes the given stmt and maps each row of the first …\nReturns a stream over the first result set.\nReturns a stream over the first result set.\nThis methods corresponds to <code>Queryable::query</code>.\nThis methods corresponds to <code>Queryable::query</code>.\nThis methods corresponds to <code>Queryable::query_first</code>.\nThis methods corresponds to <code>Queryable::query_first</code>.\nWill panic if could not convert <code>v</code> to <code>Self</code>.\nWill return <code>Err(Error::FromValueError(v))</code> if could not …\nWill return <code>Err(Error::FromValueError(v))</code> if <code>v</code> is not …\nThis method corresponds to <code>Queryable::query_drop</code>.\nThis method corresponds to <code>Queryable::query_drop</code>.\nThis methods corresponds to <code>Queryable::query_map</code>.\nThis methods corresponds to <code>Queryable::query_map</code>.\nThis macro is a convenient way to pass named parameters to …\nExecutes <code>COM_PING</code>.\nPrepares the given statement.\nPerforms the given query and collects the first result set.\nPerforms the given query and collects the first result set.\nPerforms the given query and drops the query result.\nPerforms the given query and drops the query result.\nPerforms the given query and returns the first row of the …\nPerforms the given query and returns the first row of the …\nPerforms the given query and folds the first result set to …\nPerforms the given query and folds the first result set to …\nPerforms the given query and returns the result.\nPerforms the given query and maps each row of the first …\nPerforms the given query and maps each row of the first …\nReturns a stream over the first result set.\nReturns a stream over the first result set.\nThis methods corresponds to <code>Queryable::query_fold</code>.\nThis methods corresponds to <code>Queryable::query_fold</code>.\nThis method corresponds to <code>Queryable::query_iter</code>.\nReturns a stream over the first result set.\nReturns a stream over the first result set.\n<code>FromValue</code> conversion error.\nRepresentations of parameters of a prepared statement.")