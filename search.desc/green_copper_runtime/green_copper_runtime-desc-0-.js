searchState.loadedDescShard("green_copper_runtime", 0, "IfDefPreProcessor\nruntime agnostic fetch implementation\nrequire\nfetch api support\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHTML Dom module\nJWT\nThe MYSQL module\nCached static for the <code>get_con_pool_wrapper</code> function.\nexecute method\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis is a cached function that uses the …\nOrigin of the cached function <code>get_con_pool_wrapper</code>.\nPrimes the cached function <code>get_con_pool_wrapper</code>. This is a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nquery method\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nquery method\nCached static for the <code>parse_query</code> function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a cached function that uses the <code>PARSE_QUERY</code> cached …\nOrigin of the cached function <code>parse_query</code>.\nPrimes the cached function <code>parse_query</code>. This is a cached …\n#FS Module\ngpio module\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCache module\ncpp style preprocessor\nadd a def\nadd default extensions : js/mjs/ts/mts/es/mes\nadd a supported extension e.g. js/mjs/ts/mts/es/mes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")