searchState.loadedDescShard("swc_ecma_minifier", 0, "JavaScript minifier implemented in rust.\nMakes BlockStmt and Function unique in aspect of span …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>/** @const */</code>.\nThis is applied to swc_ecma_ast::BlockStmt which is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCheck for <code>/*#__NOINLINE__*/</code>\nMark applied to non-top level variables which is injected …\nCheck for <code>/*#__PURE__*/</code>\nTreat this function as a top level module.\nIndicates that a sequence expression is generated by the …\nhttps://terser.org/docs/api-reference.html#compress-options\nThis is not serializable.\nShould we simplify expressions?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAll expressions should have dummy span. Use …\nNo effect.\n<code>0</code>: disabled inlining<code>1</code>: inline simple functions<code>2</code>: inline …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this value is zero, the minifier will repeat work until …\nIf you modified globals, set this to false.\nCompatibility for terser config.\nIt should be the Mark used for <code>resolver</code>.\nTop level symbols to retain.\nIt should be the Mark used for <code>resolver</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTOOD: Add timings.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")